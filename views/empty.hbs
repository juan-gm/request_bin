
<div class="container">
  <div class="space"></div>
  <div class="col-lg-12 justify-content-center align-items-center">
    <h4 class="text-center">Bin URL</h4>
    <pre class="prettyprint bin_url">{{binURL}}</pre>
  </div>
  <div class="space"></div>
</div>


<div class="container" style="padding-bottom: 100px;">
  <h4>Make a request to get started.</h4>
      <h5>cURL</h5>
      <pre>curl -X POST -d "fizz=buzz" https://<var>{{binURL}}</var></pre>

      <h5>PowerShell</h5>
      <pre>powershell -NoLogo -Command "(New-Object System.Net.WebClient).DownloadFile('https://<var>{{binURL}}</var>', 'C:\Windows\Temp\gza67w0c.txt')"</pre>

      <h5>Python (with Requests)</h5>
      <pre class="prettyprint">import requests, time
r = requests.post('http://<var>{{binURL}}</var>', data={"ts":time.time()})
print r.status_code
print r.content</pre>

      <h5>Node.js (with request)</h5>
      <pre class="prettyprint">var request = require('request');
var url ='http://<var>{{binURL}}</var>'
request(url, function (error, response, body) {
  if (!error) {
    console.log(body);
  }
});</pre>

      <h5>Ruby</h5>
      <pre class="prettyprint">require 'open-uri'
result = open('http://<var>{{binURL}}</var>')
result.lines { |f| f.each_line {|line| p line} }</pre>

      <h5>C# / .NET</h5>
      <pre class="prettyprint">using System;
using System.Net.Http;
using System.Threading.Tasks;

namespace RequestBinExample
{
  class Program
  {
    static void Main(string[] args)
    {
      MakeRequest();
    }

    private static async Task MakeRequest()
    {
      var httpClient = new HttpClient();
      var response = await httpClient.GetAsync(new Uri("http://<var>{{binURL}}</var>"));
      var body = await response.Content.ReadAsStringAsync();
      Console.WriteLine(body);
    }
  }
}</pre>

      <h5>Java</h5>
      <pre class="prettyprint">import org.apache.commons.httpclient.*;
import org.apache.commons.httpclient.methods.*;
import org.apache.commons.httpclient.params.HttpMethodParams;

import java.io.*;

public class RequestBinTutorial {
  public static void main(String[] args) {
    HttpClient client = new HttpClient();
    GetMethod method = new GetMethod("http://<var>{{binURL}}</var>");
    try {
      int statusCode = client.executeMethod(method);
      byte[] responseBody = method.getResponseBody();
      System.out.println(new String(responseBody));
    } catch (Exception e) {
      System.err.println("Fatal error: " + e.getMessage());
      e.printStackTrace();
    } finally {
      method.releaseConnection();
    }
  }
}</pre>
</div>
